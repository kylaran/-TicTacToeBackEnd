// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicTakToe.Context;

#nullable disable

namespace TicTakToe.Migrations
{
    [DbContext(typeof(TicTacToeDbContext))]
    [Migration("20240604095517_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FirstStep")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFreeGame")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrivateGame")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastMoveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LastMoveFrom")
                        .HasColumnType("integer");

                    b.Property<bool>("LastMoveFromSee")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastMoveIndex")
                        .HasColumnType("integer");

                    b.Property<int>("MoveTime")
                        .HasColumnType("integer");

                    b.Property<int>("ParticipantCreater")
                        .HasColumnType("integer");

                    b.Property<int?>("ParticipantJoined")
                        .HasColumnType("integer");

                    b.Property<double>("PriceGame")
                        .HasColumnType("double precision");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.Property<bool>("WithBot")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("TableId")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.GameHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("FinancialMovment")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FinishedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFreeGame")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWin")
                        .HasColumnType("boolean");

                    b.Property<string>("OponentName")
                        .HasColumnType("text");

                    b.Property<string>("OponentPhoto")
                        .HasColumnType("text");

                    b.Property<int>("StatusGame")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("Cells")
                        .HasColumnType("integer[]");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int?>("GameId1")
                        .HasColumnType("integer");

                    b.Property<int>("WallSize")
                        .HasColumnType("integer");

                    b.Property<int>("WinSize")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId1");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Added_to_attachment_menu")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Allows_write_to_pm")
                        .HasColumnType("boolean");

                    b.Property<string>("First_name")
                        .HasColumnType("text");

                    b.Property<double?>("FreeCoin")
                        .HasColumnType("double precision");

                    b.Property<int?>("IdTg")
                        .HasColumnType("integer");

                    b.Property<bool?>("Is_bot")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Is_premium")
                        .HasColumnType("boolean");

                    b.Property<string>("Language_code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastGiftReceived")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Last_name")
                        .HasColumnType("text");

                    b.Property<string>("Photo_url")
                        .HasColumnType("text");

                    b.Property<bool>("SeenChanges")
                        .HasColumnType("boolean");

                    b.Property<double?>("TonCoin")
                        .HasColumnType("double precision");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.Game", b =>
                {
                    b.HasOne("TicTakToe.Entity.BaseModels.Table", "Table")
                        .WithOne()
                        .HasForeignKey("TicTakToe.Entity.BaseModels.Game", "TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("TicTakToe.Entity.BaseModels.Table", b =>
                {
                    b.HasOne("TicTakToe.Entity.BaseModels.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId1");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
